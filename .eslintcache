[{"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\index.js":"1","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\App.js":"2","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Navbar.jsx":"3","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\OtherUserProfileContainer.jsx":"4","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Loader.jsx":"5","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ModifyProfileCard.jsx":"6","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\CreatePostComponent.jsx":"7","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\NewPostModal.jsx":"8","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ProfileDetailsCard.jsx":"9","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Category.jsx":"10","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\SingleExperience.jsx":"11","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ProfileComponent.jsx":"12","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\CurrentUserExperience.jsx":"13","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Footer.jsx":"14","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\OtherUserDetails.jsx":"15","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\SinglePost.jsx":"16","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ExperienceModal.jsx":"17"},{"size":466,"mtime":1607075070447,"results":"18","hashOfConfig":"19"},{"size":1130,"mtime":1607078477313,"results":"20","hashOfConfig":"19"},{"size":3716,"mtime":1607074259673,"results":"21","hashOfConfig":"19"},{"size":2884,"mtime":1607074776072,"results":"22","hashOfConfig":"19"},{"size":284,"mtime":1607075070413,"results":"23","hashOfConfig":"19"},{"size":1480,"mtime":1607072112713,"results":"24","hashOfConfig":"19"},{"size":2533,"mtime":1607078058870,"results":"25","hashOfConfig":"19"},{"size":5675,"mtime":1607073384173,"results":"26","hashOfConfig":"19"},{"size":2099,"mtime":1607075651137,"results":"27","hashOfConfig":"19"},{"size":2121,"mtime":1607076173892,"results":"28","hashOfConfig":"19"},{"size":1411,"mtime":1607075694161,"results":"29","hashOfConfig":"19"},{"size":3301,"mtime":1607075420448,"results":"30","hashOfConfig":"19"},{"size":2522,"mtime":1607076297643,"results":"31","hashOfConfig":"19"},{"size":3015,"mtime":1607078059347,"results":"32","hashOfConfig":"19"},{"size":3655,"mtime":1607078059845,"results":"33","hashOfConfig":"19"},{"size":8768,"mtime":1607078060563,"results":"34","hashOfConfig":"19"},{"size":13396,"mtime":1607078392793,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"njo9he",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\index.js",[],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\App.js",["72"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport NavBar from \"./components/Navbar\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport ProfileComponent from \"./components/ProfileComponent\";\r\nimport Home from \"./components/Home\";\r\nimport OtherUserDetails from \"./components/OtherUserDetails\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <NavBar />\r\n          <Route path=\"/\" exact render={(props) => <Home {...props} />} />\r\n          <Route\r\n            path=\"/profile\"\r\n            exact\r\n            render={(props) => <ProfileComponent {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/profile/edit/position/:id\"\r\n            exact\r\n            render={(props) => <ProfileComponent {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/other-user-details/:userId\"\r\n            component={OtherUserDetails}\r\n          />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Navbar.jsx",["73","74","75"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\OtherUserProfileContainer.jsx",["76","77","78"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Loader.jsx",[],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ModifyProfileCard.jsx",["79","80","81","82","83","84"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\CreatePostComponent.jsx",[],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\NewPostModal.jsx",["85","86"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ProfileDetailsCard.jsx",["87","88","89","90","91"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Category.jsx",["92","93"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\SingleExperience.jsx",["94","95","96"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ProfileComponent.jsx",["97"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\CurrentUserExperience.jsx",["98"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\Footer.jsx",["99"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\OtherUserDetails.jsx",[],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\SinglePost.jsx",["100","101","102","103","104","105","106"],"C:\\Users\\SITA-SOFT\\Documents\\GitHub\\BuildWeek-Project\\LinkedinCloneBuildWeek\\src\\components\\ExperienceModal.jsx",["107","108"],"import { ImageAspectRatio } from '@material-ui/icons';\r\nimport React, { Component } from 'react'\r\nimport { Modal, Button, Form, Col,  InputGroup, FormControl, Alert } from 'react-bootstrap';\r\nrequire('dotenv').config()\r\n\r\nexport default class Experience_Modal extends Component {\r\n    state = {\r\n        experience: {\r\n            role: \"\",\r\n            company: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\", //could be null\r\n            description: \"\",\r\n            area: \"\",\r\n            image: \"\"\r\n        },\r\n        experience_id : \"\",\r\n        delete: false,\r\n        update: false,\r\n        add: false,\r\n        working: false,\r\n        uploading: false,\r\n       \r\n    }\r\n\r\n\r\n   \r\n   \r\n    \r\n    url = `https://striveschool-api.herokuapp.com/api/profile/${process.env.REACT_APP_USER_ID}/experiences`\r\n\r\n    updateField = (e) => {\r\n        let experience = { ...this.state.experience } \r\n        let currentId = e.currentTarget.id \r\n        experience[currentId] = e.currentTarget.value \r\n        this.setState({experience})\r\n    }\r\n\r\n    handleSubmit=async(e)=>{\r\n        e.preventDefault();\r\n        try{\r\n        let response = await fetch(this.url,{\r\n            method: \"POST\",\r\n            headers: new Headers({\r\n                \"Authorization\": `Bearer ${process.env.REACT_APP_API_TOKEN}`,\r\n                \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify(this.state.experience),\r\n            })\r\n            if(response.ok){\r\n                alert(\"Experience Added\");\r\n            }else{\r\n                alert(\"Something went wrong!\");\r\n            }\r\n        }catch(error){\r\n            alert(`Something went wrong! ${error}`)\r\n        }\r\n    }\r\n   \r\n    handleUpdate=async(e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            this.getUserExperience()\r\n        let response = await fetch(this.url + \"/\"+ this.state.experience_id,{\r\n            method: \"PUT\",\r\n            headers: new Headers({\r\n                \"Authorization\": `Bearer ${process.env.REACT_APP_API_TOKEN}`,\r\n                \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify(this.state.experience),\r\n            })\r\n            if(response.ok){\r\n                alert(\"Experience Updated\");\r\n            }else{\r\n                alert(\"Something went wrong!\");\r\n            }\r\n        \r\n        }catch(error){\r\n            alert(`Something went wrong! ${error}`)\r\n        }\r\n    }\r\n\r\n    handleDelete=async(e)=>{\r\n        e.preventDefault();\r\n        e.preventDefault();\r\n        try{\r\n        let response = await fetch(this.url + \"/\"+ this.state.experience_id,{\r\n                method: \"DELETE\",\r\n                headers: new Headers({\r\n                    \"Authorization\": `Bearer ${process.env.REACT_APP_API_TOKEN}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                })\r\n            });\r\n            if(response.ok){\r\n                alert(\"Experience Deleted\");\r\n            }\r\n            else{\r\n                alert(\"Something went wrong!\")\r\n            }\r\n        }catch(error){\r\n            alert(`Something went wrong! ${error}`)\r\n        }\r\n    }\r\n    \r\n    getUserExperience=async()=>{\r\n        if(this.props.edit){\r\n            try{\r\n                let response = await fetch( `https://striveschool-api.herokuapp.com/api/profile/${process.env.REACT_APP_USER_ID}/experiences/${this.state.experience_id}`,{\r\n                    \"method\": \"GET\", \r\n                    \"headers\": new Headers({\r\n                        \"Authorization\": `Bearer ${process.env.REACT_APP_API_TOKEN}`\r\n                    })\r\n                })\r\n                if(response.ok){\r\n        \r\n                    let userExperience = await response.json();\r\n        \r\n                    let experience = userExperience.find(experience => experience._id === this.state.experience_id)\r\n                    console.log(experience)\r\n                    let expe = { ...this.state.experience } \r\n                    expe.role = experience.role\r\n                    expe.area = experience.area\r\n                    expe.company = experience.company\r\n                    expe.description = experience.description\r\n                    expe.endDate = experience.endDate\r\n                    expe.startDate = experience.startDate\r\n                    this.setState({experience: expe});\r\n                }else{\r\n                    Alert(\"An error occured\")\r\n                } \r\n            }catch(error){\r\n    \r\n            }\r\n        }     \r\n    }\r\n\r\n    \r\n\r\n  \r\n    componentDidMount(previousProps) {\r\n        if(this.props.experience_id !== \"\"){\r\n            this.setState({experience_id: this.props.experience_id}) \r\n        }\r\n       \r\n        if(this.props.edit){\r\n            this.getUserExperience();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n       \r\n        return (\r\n            <div>\r\n                <Modal size=\"lg\" show={this.props.show} onHide={this.props.onHide}>\r\n                    <Modal.Header closeButton>\r\n                        {this.props.add && <Modal.Title>Add experience</Modal.Title>}\r\n                        {this.props.edit && <Modal.Title>Edit experience</Modal.Title>}\r\n                    </Modal.Header>\r\n                    <Form onSubmit={this.handleSubmit}  >\r\n                        <Modal.Body style={{overflowY: \"scroll\", maxHeight: \"60vh\"}}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label htmlFor=\"role\">Title *</Form.Label>\r\n                                    <Form.Control type=\"text\" id=\"role\" placeholder=\"Ex: Retails Sales Manager\" \r\n                                    value={this.state.experience.role}\r\n                                    onChange={this.updateField}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            \r\n                            \r\n                            <Form.Row>\r\n                                <Form.Group as={Col} >\r\n                                    <Form.Label  htmlFor=\"company\">Company *</Form.Label>\r\n                                    <Form.Control id=\"company\" type=\"text\" placeholder=\"e.g Strive School\"\r\n                                            value={this.state.experience.company}\r\n                                            onChange={this.updateField} />\r\n                                    <span></span>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as= {Col}  md={12} className=\"flex flex-column align-self-end\">\r\n                                    <Form.Label>\r\n                                        <Form.Check\r\n                                            type=\"checkbox\"\r\n                                            id=\"working\"\r\n                                            label=\"I am currently working in this role\"\r\n                                            checked={this.state.working}\r\n                                            onChange={this.updateField}\r\n                                        />\r\n                                    </Form.Label>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as ={Col} md={6}>\r\n                                    <Form.Label>Start Date *</Form.Label>\r\n                                  \r\n                                    <Form.Control\r\n                                        type=\"datetime-local\"\r\n                                        name=\"dateTime\"\r\n                                        id=\"startDate\"\r\n                                        placeholder=\"Date and Time\"\r\n                                        value={this.state.experience.startDate}\r\n                                        onChange={this.updateField}  \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as ={Col} md={6}>\r\n                                    <Form.Label>End Date *</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"datetime-local\"\r\n                                        name=\"dateTime\"\r\n                                        id=\"endDate\"\r\n                                        placeholder=\"Date and Time\"\r\n                                        value={this.state.experience.endDate}\r\n                                        onChange={this.updateField} \r\n                                    />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                    <Form.Group as={Col} >\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control id=\"description\"  as=\"textarea\" rows={3} value={this.state.experience.description} onChange={this.updateField} />\r\n                                    </Form.Group>        \r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label  htmlFor=\"area\">Location</Form.Label>\r\n                                    <Form.Control id=\"area\" type=\"text\" placeholder=\"Ex: London, United Kingdom\" \r\n                                    value={this.state.experience.area}\r\n                                    onChange={this.updateField}/>\r\n                                    <span></span>\r\n                                </Form.Group>       \r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label><span>Media</span><br/> \r\nAdd or link to external documents, photos, sites, videos, and presentations.</Form.Label>\r\n                                       <Form.Row>\r\n                                           <Form.Group as={Col}>\r\n                                                <Form.File.Input className=\"btn\"  variant=\"primary\" block className=\"rounded-pill\" \r\n                                      />\r\n                                           </Form.Group>\r\n                                           <Form.Group as={Col}>\r\n                                                <Button variant=\"outline-primary\"   className=\"rounded-pill\" block onClick={this.state.toggle} >\r\n                                                    Link\r\n                                                </Button>\r\n                                           </Form.Group>\r\n                                           \r\n                                       </Form.Row>\r\n                                       <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <FormControl\r\n                                                    placeholder=\"Paste or type a link to add a file or video\"\r\n                                                    aria-label=\"imgLink\"\r\n                                                    aria-describedby=\"imgLink\"\r\n                                                    />\r\n                                                    <InputGroup.Append>\r\n                                                    <Button variant=\"outline-secondary\">Add</Button>\r\n                                                    </InputGroup.Append>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                       </Form.Row>\r\n                                    </Form.Group>        \r\n                            </Form.Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Form.Row className=\"justify-content-bewteen\">\r\n                                {this.props.edit && <><Form.Group as = {Col} md={6} >\r\n                                    <Button variant=\"outline-secondary\" className=\"rounded-pill\" onClick = {this.handleDelete}  >\r\n                                        Delete\r\n                                    </Button>\r\n                                </Form.Group> <Form.Group as = {Col} md={6} >\r\n                                    <Button variant=\"primary\"  className=\"rounded-pill\" onClick={this.handleUpdate}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Form.Group> </>}\r\n                                {this.props.add  && <> <Form.Group as = {Col} md={6} >\r\n                                    <Button variant=\"primary\" type=\"submit\"  className=\"rounded-pill\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form.Group> </>}\r\n                            </Form.Row>\r\n                            \r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"109","severity":1,"message":"110","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":2,"column":40,"nodeType":"111","messageId":"112","endLine":2,"endColumn":51},{"ruleId":"109","severity":1,"message":"114","line":2,"column":53,"nodeType":"111","messageId":"112","endLine":2,"endColumn":59},{"ruleId":"115","severity":1,"message":"116","line":49,"column":68,"nodeType":"117","endLine":49,"endColumn":110},{"ruleId":"115","severity":1,"message":"116","line":20,"column":11,"nodeType":"117","endLine":20,"endColumn":79},{"ruleId":"118","severity":1,"message":"119","line":46,"column":13,"nodeType":"117","endLine":46,"endColumn":41},{"ruleId":"118","severity":1,"message":"119","line":48,"column":13,"nodeType":"117","endLine":48,"endColumn":41},{"ruleId":"109","severity":1,"message":"120","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"121","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":24},{"ruleId":"109","severity":1,"message":"122","line":2,"column":26,"nodeType":"111","messageId":"112","endLine":2,"endColumn":29},{"ruleId":"109","severity":1,"message":"114","line":2,"column":48,"nodeType":"111","messageId":"112","endLine":2,"endColumn":54},{"ruleId":"109","severity":1,"message":"123","line":4,"column":9,"nodeType":"111","messageId":"112","endLine":4,"endColumn":32},{"ruleId":"109","severity":1,"message":"124","line":8,"column":5,"nodeType":"111","messageId":"112","endLine":8,"endColumn":9},{"ruleId":"109","severity":1,"message":"125","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":107,"column":33,"nodeType":"117","endLine":107,"endColumn":127},{"ruleId":"109","severity":1,"message":"114","line":4,"column":16,"nodeType":"111","messageId":"112","endLine":4,"endColumn":22},{"ruleId":"109","severity":1,"message":"121","line":4,"column":24,"nodeType":"111","messageId":"112","endLine":4,"endColumn":27},{"ruleId":"109","severity":1,"message":"122","line":4,"column":29,"nodeType":"111","messageId":"112","endLine":4,"endColumn":32},{"ruleId":"109","severity":1,"message":"120","line":4,"column":34,"nodeType":"111","messageId":"112","endLine":4,"endColumn":43},{"ruleId":"115","severity":1,"message":"116","line":31,"column":17,"nodeType":"117","endLine":31,"endColumn":106},{"ruleId":"109","severity":1,"message":"126","line":5,"column":27,"nodeType":"111","messageId":"112","endLine":5,"endColumn":33},{"ruleId":"109","severity":1,"message":"127","line":5,"column":35,"nodeType":"111","messageId":"112","endLine":5,"endColumn":40},{"ruleId":"109","severity":1,"message":"128","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"129","line":4,"column":25,"nodeType":"111","messageId":"112","endLine":4,"endColumn":36},{"ruleId":"109","severity":1,"message":"130","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"131","line":55,"column":1},{"ruleId":"109","severity":1,"message":"132","line":5,"column":18,"nodeType":"111","messageId":"112","endLine":5,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":12,"column":11,"nodeType":"117","endLine":12,"endColumn":60},{"ruleId":"109","severity":1,"message":"120","line":8,"column":16,"nodeType":"111","messageId":"112","endLine":8,"endColumn":25},{"ruleId":"109","severity":1,"message":"133","line":8,"column":45,"nodeType":"111","messageId":"112","endLine":8,"endColumn":52},{"ruleId":"109","severity":1,"message":"134","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":14},{"ruleId":"109","severity":1,"message":"135","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":20},{"ruleId":"109","severity":1,"message":"136","line":82,"column":23,"nodeType":"111","messageId":"112","endLine":82,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":111,"column":33,"nodeType":"117","endLine":111,"endColumn":100},{"ruleId":"115","severity":1,"message":"116","line":159,"column":33,"nodeType":"117","endLine":159,"endColumn":127},{"ruleId":"109","severity":1,"message":"137","line":1,"column":10,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":245,"column":107,"nodeType":"140","endLine":245,"endColumn":131},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'HiOutlineDotsHorizontal' is defined but never used.","'logo' is assigned a value but never used.","'BiWorld' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'FaPlus' is defined but never used.","'FaAngleDown' is defined but never used.","'ExperienceModal' is defined but never used.","Parsing error: Unexpected token\n\n  53 |   };\n  54 | \n> 55 | <<<<<<< HEAD\n     | ^\n  56 |   componentDidMount() {\n  57 |     this.getUserProfile();\n  58 |     this.getUsersProfile();","'FaPen' is defined but never used.","'Spinner' is defined but never used.","'Loader' is defined but never used.","'NewPostModal' is defined but never used.","'data' is assigned a value but never used.","'ImageAspectRatio' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]